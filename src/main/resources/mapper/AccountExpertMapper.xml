<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dakun.jianzhong.mapper.AccountExpertMapper">
  <resultMap id="BaseResultMap" type="com.dakun.jianzhong.model.AccountExpert">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="id_number" jdbcType="VARCHAR" property="idNumber" />
    <result column="expert_name" jdbcType="VARCHAR" property="expertName" />
    <result column="id_front" jdbcType="VARCHAR" property="idFront" />
    <result column="id_back" jdbcType="VARCHAR" property="idBack" />
    <!--<result column="credential" jdbcType="VARCHAR" property="credential" />-->
    <result column="skills" jdbcType="VARCHAR" property="skills" />
    <result column="description" jdbcType="VARCHAR" property="description" />
  </resultMap>

  <resultMap id="InviteExpertMap" type="com.dakun.jianzhong.model.vo.InviteExportListVo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="portrait" jdbcType="VARCHAR" property="portrait" />
    <result column="expert_name" jdbcType="VARCHAR" property="expertName" />
    <result column="description" jdbcType="VARCHAR" property="description" />
  </resultMap>

  <select id="getRecommendInviteExpert" parameterType="java.util.HashMap" resultMap="InviteExpertMap">
      SELECT
            e.id,
            e.expert_name,
            e.description,
            u.portrait
      FROM
            account_expert e,
            account_user u
      WHERE
            e.`id` = u.`id`
      <if test="likeName != null" >
          and e.expert_name like '%${likeName}%'
      </if>
      <if test="likeName == null and cropId != null" >
          AND EXISTS
          (SELECT 1  FROM social_tag t
          WHERE t.crop_id = ${cropId}
          AND CONCAT(',', e.`skills`, ',') LIKE CONCAT('%,', t.id, ',%'))
      </if>
          ORDER BY u.`follower_num` DESC
  </select>
</mapper>