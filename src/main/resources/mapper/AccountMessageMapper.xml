<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dakun.jianzhong.mapper.AccountMessageMapper">
  <resultMap id="BaseResultMap" type="com.dakun.jianzhong.model.AccountMessage">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="CHAR" property="id" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="puid" jdbcType="INTEGER" property="puid" />
    <result column="message_type" jdbcType="INTEGER" property="messageType" />
    <result column="registration_id" jdbcType="VARCHAR" property="registrationId"/>
    <result column="jump_params" jdbcType="VARCHAR" property="jumpParams"/>
    <result column="briefinfo" jdbcType="VARCHAR" property="briefinfo" />
    <result column="message_time" jdbcType="TIMESTAMP" property="messageTime" />
    <result column="state" jdbcType="TINYINT" property="state" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="last_modify_time" jdbcType="TIMESTAMP" property="lastModifyTime" />
  </resultMap>

  <select id="getAuthorByFid" parameterType="java.util.HashMap" resultMap="com.dakun.jianzhong.mapper.AccountUserMapper.BaseResultMap">
     select
              u.*
      from
            account_user u
          <if test="type == 2">
              ,social_example a
          </if>
            <if test="type == 1">
                ,social_article a
            </if>
            <if test="type == 0">
                ,social_question a
            </if>
      where a.uid = u.id
            and a.id=#{followedId}
            and u.state=1
  </select>

  <select id="getFollowSendUserList" parameterType="java.util.HashMap" resultMap="BaseResultMap">
       select
            f.uid, u.registration_id
       from
            social_follow f,
            account_user u
       where
            f.uid = u.id and
            f.type=#{type} and
            f.followed_id = #{followedId}
            and u.id != #{uid}
            and f.state=1
  </select>

    <select id="getAuthorByCid" parameterType="java.util.HashMap" resultMap="com.dakun.jianzhong.mapper.AccountUserMapper.BaseResultMap">
        select
        u.*
        from
        account_user u
        <if test="type == 2">
            ,social_example_conversation c
            ,social_example_comment cmt
        </if>
        <if test="type == 1">
            ,social_article_conversation c
            ,social_article_comment cmt
        </if>
        <if test="type == 0">
            ,social_question_conversation c
            ,social_question_comment cmt
        </if>
        where cmt.uid = u.id
        and cmt.id = c.comment_id
        and c.comment_id=#{commentId}
        and u.state=1
        group by u.id
    </select>

    <select id="getConversationSendUserList" parameterType="java.util.HashMap" resultMap="BaseResultMap">
        select
        c.uid, u.registration_id
        from
        account_user u
        <if test="type == 2">
            ,social_example_conversation c
        </if>
        <if test="type == 1">
            ,social_article_conversation c
        </if>
        <if test="type == 0">
            ,social_question_conversation c
        </if>
        where
        c.uid = u.id and
        c.comment_id = #{commentId}
        and u.id != #{uid}
        and c.state=1 group by  c.uid, u.registration_id
    </select>

    <select id="listSysMsg" resultType="com.dakun.jianzhong.model.AccountMessage">
        select
            ame.id,
            aus.name username,
            aus.mobile user_mobile,
            ame.state
        from account_message ame
        inner join account_user aus on aus.id=ame.uid
        <where>
            and ame.message_type=${@com.dakun.jianzhong.model.constant.MessageType@SYSTEM.value()}
            <if test="pushId != null">
                and ame.puid = #{pushId}
            </if>
            <if test="receiverName != null and receiverName != ''">
                and aus.name like concat(#{receiverName}, '%')
            </if>
            <if test="receiverMobile != null and receiverMobile != ''">
                and aus.mobile like concat(#{receiverMobile}, '%')
            </if>
            <if test="state != null">
                and ame.state = #{state}
            </if>
        </where>
    </select>

</mapper>